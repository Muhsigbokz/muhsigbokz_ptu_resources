{"_id": "4xi6lrywxa5rdq1u", "name": "Daily Exp (Player Trainer)", "permission": {"default": 1}, "type": "script", "scope": "global", "command": "// _id:4xi6lrywxa5rdq1u\n// name:Daily Exp (Player Trainer)\n\n\nconst currentDialogId = randomID()\nconst myActorId = game.user.data.character ? game.user.data.character : \"0\"\nconst myActor = game.actors.get(myActorId)\nconst myCommandRank = myActor.data.data.skills.command.value.value\nconst myTrainerOfChampionsBonus = myActor.data.items.filter(i => i.data.name.includes(\"Trainer of Champions\") && i.data.data.effect.includes(\"additional +5 Experience\"))[0] ? 5 : 0\nconst myAmountTrainablePokemon = myActor.data.items.filter(i => i.data.name.includes(\"Train the Reserves\") && i.data.data.effect.includes(\"equal to twice your Command Rank\"))[0] ? myCommandRank * 2 : myCommandRank\nconst expCandidatePokemons = game.actors.filter(actor => actor.data.data.owner === myActorId)\n\nconst someonesGainedExp = (trainerCommandRank, otherFlatBonus) => (pokemonLevel) => {\n    return (Math.ceil(trainerCommandRank / 2) - 1) * 5 + Math.ceil(pokemonLevel / 2) + otherFlatBonus\n}\n\nconst myGainedExp = someonesGainedExp(myCommandRank, myTrainerOfChampionsBonus)\nlet tablePokemonWidth = 4\n\nvar tableSortCounter = 0\nvar htmlload = \"<p><table>\"\n\nexpCandidatePokemons.forEach(currentPokemon => {\n    const imagePath = currentPokemon.data.img\n    const name = currentPokemon.data.name\n    const id = currentPokemon.data._id\n    const oldExp = currentPokemon.data.data.level.exp\n    const oldLevel = currentPokemon.data.data.level.current\n    const newExp = oldExp + myGainedExp(oldLevel)\n    let htmlLevel = \"\" + oldLevel\n    if (newExp >= currentPokemon.data.data.level.expTillNextLevel) {\n        htmlLevel = \"\" + oldLevel + \" => \" + (oldLevel + 1)\n    }\n\n\n    htmlCheckbox = `<input type=\"checkbox\" class=\"${currentDialogId}\" value=\"${id}\" name=\"${name}\">`\n\n    if (tableSortCounter === 0) {\n        htmlload += \"<tr>\"\n    }\n    htmlload += `<td><img src=\"${imagePath}\" width=60/></td><td>${htmlCheckbox} ${htmlLevel} ${name}<br/> ${oldExp} => ${newExp} </td>`\n    if (tableSortCounter === (tablePokemonWidth - 1)) {\n        htmlload += \"</tr>\"\n    }\n    tableSortCounter = (tableSortCounter + 1) % tablePokemonWidth\n})\n\nhtmlload += \"</table></p>\"\n\nlet d = new Dialog({\n    title: \"Train Pok\u00e9mon\",\n    content: htmlload,\n    buttons: {\n        one: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: \"Train Pok\u00e9mon\",\n            callback: () => {\n\n\n                pokemonIds = [...document.getElementsByClassName(currentDialogId)].filter(cb => cb.checked).map(cb => cb.value)\n                if (pokemonIds.length <= myAmountTrainablePokemon) {\n                    let innerHtmlLoad = `<p>Training ${pokemonIds.length} of ${myAmountTrainablePokemon} Pok\u00e9mon</p>\n                                         <p><table>`;\n\n                    pokemonIds.forEach(_id => {\n                        const currentPokemon = game.actors.get(_id)\n                        const imagePath = currentPokemon.data.img\n                        const name = currentPokemon.data.name\n                        const oldExp = currentPokemon.data.data.level.exp\n                        const oldLevel = currentPokemon.data.data.level.current\n                        const newExp = oldExp + myGainedExp(oldLevel)\n                        let htmlLevel = \"\" + oldLevel\n                        if (newExp >= currentPokemon.data.data.level.expTillNextLevel) {\n                            htmlLevel = \"\" + oldLevel + \" => \" + (oldLevel + 1)\n                        }\n\n                        innerHtmlLoad += `<tr>\n                                        <td>\n                                            <img src=\"${imagePath}\" width=60/>\n                                        </td>\n                                        <td>\n                                            ${htmlLevel} ${name}<br/>\n                                            ${oldExp} => ${newExp}\n                                        </td>\n                                      </tr>`\n\n                    })\n\n                    innerHtmlLoad += \"</table></p>\"\n\n                    let okayD = new Dialog({\n                        title: \"Confirm Training\",\n                        content: innerHtmlLoad,\n                        buttons: {\n                            one: {\n                                icon: '<i class=\"fas fa-check\"></i>',\n                                label: \"Confirm Training\",\n                                callback: () => {\n                                    console.log(\"Training pokemon...\")\n                                    let message = ``\n                                    let totalGainedExp = 0\n                                    pokemonIds.forEach(_id => {\n                                        const currentPokemon = game.actors.get(_id)\n                                        const name = currentPokemon.data.name\n                                        const oldExp = currentPokemon.data.data.level.exp\n                                        const oldLevel = currentPokemon.data.data.level.current\n                                        const newExp = oldExp + myGainedExp(oldLevel)\n                                        let htmlLevel = \"\" + oldLevel\n                                        if (newExp >= currentPokemon.data.data.level.expTillNextLevel) {\n                                            htmlLevel = \"\" + oldLevel + \" => \" + (oldLevel + 1)\n                                        }\n                                        totalGainedExp += newExp - oldExp\n                                        let currentMessage = `${name}: ${oldExp} => ${newExp} (Level ${htmlLevel})`\n                                        console.log(currentMessage)\n                                        message += currentMessage + \"<br/>\"\n                                        currentPokemon.update({\"data.level.exp\": newExp})\n                                    })\n                                    message += `<br/>Total gained: ${totalGainedExp}`\n                                    ChatMessage.create({\n                                        whisper: ChatMessage.getWhisperRecipients('GM'),\n                                        content: `\n<div class=\"content flexrow pt-1\" style=\"font-variant:normal\">\n    <div class=\"swsh-box\">\n        <div class=\"swsh-header\" style=\"border-bottom:1px solid #00000020;text-align:center\">\n            <div class=\"d-flex w-100 mt-1 mb-1 justify-content-center\">\n                <span style=\"padding:5px\">Auto Training</span>\n            </div>\n        </div>\n        <div class=\"d-flex w-100 fs-10 justify-content-center\" style=\"flex-wrap:wrap;word-break:break-word\">\n                \n                <div class=\"swsh-header col-sm-12\">\n                    <div class=\"d-flex w-100 mt-1 mb-1 fs-11\" style=\"align-items:center;text-align:center\">\n                        <div class=\"col\">Effect</div>\n                    </div>\n                </div>\n                <div class=\"swsh-body col-sm-12\">\n                    <div class=\"d-flex w-100 mt-1 mb-1 fs-11\" style=\"align-items:center;text-align:center\">\n                        <div class=\"p-1 readable pokemon p8 tight\" style=\"word-break:break-word;text-align:start;line-height:16px\">${message}</div>\n                    </div>\n                </div>\n        </div>\n    </div>\n</div>\n                                    `\n                                    });\n                                }\n                            },\n                            two: {\n                                icon: '<i class=\"fas fa-times\"></i>',\n                                label: \"Stop\",\n                                callback: () => console.log(\"Did not train pokemon.\")\n                            }\n                        },\n                        default: \"two\",\n                        render: html => console.log(\"\"),\n                        close: html => console.log(\"closed training confirm Dialog\")\n                    }, {width: 500, height: 400});\n                    okayD.render(true);\n\n                } else {\n\n                    let tooManyD = new Dialog({\n                        title: \"Failed Training\",\n                        content: `Tried to too many (${pokemonIds.length}) Pok\u00e9mon, only ${myAmountTrainablePokemon} allowed.`,\n                        buttons: {\n                            one: {\n                                icon: '<i class=\"fas fa-check\"></i>',\n                                label: \"Sad\",\n                                callback: () => {\n                                }\n                            }\n                        },\n                        default: \"one\",\n                        render: html => console.log(\"Register interactivity in the rendered dialog\"),\n                        close: html => console.log(\"This always is logged no matter which option is chosen\")\n                    });\n                    tooManyD.render(true);\n\n                }\n\n            }\n        },\n        two: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"Cancel\",\n            callback: () => console.log(\"Cancelled Training\")\n        }\n    },\n    default: \"two\",\n    render: html => console.log(\"\"),\n    close: html => console.log(\"Closed Training Selection Dialog\")\n}, {width: 1200, height: 500});\nd.render(true);", "img": "icons/svg/dice-target.svg"}